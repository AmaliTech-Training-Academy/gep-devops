# ==============================================================================
# .github/workflows/frontend-ci-cd.yml
# ==============================================================================

name: Frontend CI/CD Pipeline

on:
  repository_dispatch:
    types: [frontend-deploy]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        options:
          - dev
          - prod

env:
  AWS_REGION: us-east-1
  NODE_VERSION: '18'

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    name: Build and Deploy Frontend
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout DevOps Repository
        uses: actions/checkout@v4
      
      - name: Checkout Frontend Repository
        uses: actions/checkout@v4
        with:
          repository: your-org/event-planner-frontend
          token: ${{ secrets.GH_PAT }}
          path: frontend
      
      - name: Set Environment Variables
        run: |
          echo "ENVIRONMENT=${{ github.event.inputs.environment || github.event.client_payload.environment }}" >> $GITHUB_ENV
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install Dependencies
        working-directory: frontend
        run: npm ci
      
      - name: Run Tests
        working-directory: frontend
        run: npm run test:ci
      
      - name: Build Application
        working-directory: frontend
        run: |
          if [ "${{ env.ENVIRONMENT }}" == "prod" ]; then
            npm run build -- --configuration=production
          else
            npm run build -- --configuration=development
          fi
        env:
          API_URL: https://api.sankofagrid.com
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-role
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Get S3 Bucket Name
        id: get-bucket
        run: |
          cd terraform/environments/${{ env.ENVIRONMENT }}
          BUCKET_NAME=$(terraform output -raw frontend_bucket_name)
          echo "bucket_name=$BUCKET_NAME" >> $GITHUB_OUTPUT
      
      - name: Sync to S3
        working-directory: frontend/dist
        run: |
          aws s3 sync . s3://${{ steps.get-bucket.outputs.bucket_name }}/ \
            --delete \
            --cache-control "public, max-age=31536000, immutable" \
            --exclude "*.html" \
            --exclude "*.json"
          
          # HTML and JSON files with shorter cache
          aws s3 sync . s3://${{ steps.get-bucket.outputs.bucket_name }}/ \
            --cache-control "public, max-age=0, must-revalidate" \
            --exclude "*" \
            --include "*.html" \
            --include "*.json"
      
      - name: Get CloudFront Distribution ID
        id: get-distribution
        run: |
          cd terraform/environments/${{ env.ENVIRONMENT }}
          DISTRIBUTION_ID=$(terraform output -raw cloudfront_distribution_id)
          echo "distribution_id=$DISTRIBUTION_ID" >> $GITHUB_OUTPUT
      
      - name: Invalidate CloudFront Cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ steps.get-distribution.outputs.distribution_id }} \
            --paths "/*"
      
      - name: Deployment Summary
        run: |
          echo "## Frontend Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment:** ${{ env.ENVIRONMENT }}" >> $GITHUB_STEP_SUMMARY
          echo "- **S3 Bucket:** ${{ steps.get-bucket.outputs.bucket_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **CloudFront:** ${{ steps.get-distribution.outputs.distribution_id }}" >> $GITHUB_STEP_SUMMARY
          echo "- **URL:** https://www.sankofagrid.com" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo " Frontend deployed successfully" >> $GITHUB_STEP_SUMMARY