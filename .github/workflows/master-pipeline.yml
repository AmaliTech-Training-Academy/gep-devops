name: Master Pipeline Orchestrator

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'dev'
        type: choice
        options: [dev, staging, prod]
      run_backend:
        description: 'Run Backend Pipeline'
        required: false
        default: true
        type: boolean
      run_frontend:
        description: 'Run Frontend Pipeline'
        required: false
        default: true
        type: boolean
      run_security:
        description: 'Run Security Monitoring'
        required: false
        default: true
        type: boolean
      run_performance:
        description: 'Run Performance Tests'
        required: false
        default: false
        type: boolean
      run_health:
        description: 'Run Health Checks'
        required: false
        default: true
        type: boolean

jobs:
  pipeline-start:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ inputs.environment }}
      timestamp: ${{ steps.timestamp.outputs.timestamp }}
    steps:
    - name: Pipeline Start Notification
      uses: 8398a7/action-slack@v3
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      with:
        status: custom
        custom_payload: |
          {
            "text": "üöÄ Master Pipeline Started",
            "attachments": [{
              "color": "good",
              "fields": [{
                "title": "Environment",
                "value": "${{ inputs.environment }}",
                "short": true
              }, {
                "title": "Triggered By",
                "value": "${{ github.actor }}",
                "short": true
              }, {
                "title": "Backend",
                "value": "${{ inputs.run_backend && '‚úÖ' || '‚ùå' }}",
                "short": true
              }, {
                "title": "Frontend",
                "value": "${{ inputs.run_frontend && '‚úÖ' || '‚ùå' }}",
                "short": true
              }, {
                "title": "Security",
                "value": "${{ inputs.run_security && '‚úÖ' || '‚ùå' }}",
                "short": true
              }, {
                "title": "Performance",
                "value": "${{ inputs.run_performance && '‚úÖ' || '‚ùå' }}",
                "short": true
              }]
            }]
          }

    - name: Generate Timestamp
      id: timestamp
      run: echo "timestamp=$(date -u +%Y%m%d-%H%M%S)" >> $GITHUB_OUTPUT

  backend-pipeline:
    needs: pipeline-start
    if: inputs.run_backend
    uses: ./.github/workflows/backend-ci-cd.yml
    with:
      environment: ${{ inputs.environment }}
    secrets: inherit

  frontend-pipeline:
    needs: pipeline-start
    if: inputs.run_frontend
    uses: ./.github/workflows/frontend-ci-cd.yml
    with:
      environment: ${{ inputs.environment }}
    secrets: inherit

  security-monitoring:
    needs: pipeline-start
    if: inputs.run_security
    uses: ./.github/workflows/security-monitoring.yml
    secrets: inherit

  performance-monitoring:
    needs: pipeline-start
    if: inputs.run_performance
    uses: ./.github/workflows/performance-monitoring.yml
    secrets: inherit

  health-monitoring:
    needs: pipeline-start
    if: inputs.run_health
    uses: ./.github/workflows/health-monitoring.yml
    secrets: inherit

  pipeline-summary:
    needs: [pipeline-start, backend-pipeline, frontend-pipeline, security-monitoring, performance-monitoring, health-monitoring]
    if: always()
    runs-on: ubuntu-latest
    steps:
    - name: Generate Pipeline Report
      run: |
        echo "# Master Pipeline Report" > pipeline-report.md
        echo "**Environment:** ${{ inputs.environment }}" >> pipeline-report.md
        echo "**Timestamp:** ${{ needs.pipeline-start.outputs.timestamp }}" >> pipeline-report.md
        echo "**Triggered By:** ${{ github.actor }}" >> pipeline-report.md
        echo "" >> pipeline-report.md
        echo "## Pipeline Results" >> pipeline-report.md
        echo "- Backend Pipeline: ${{ needs.backend-pipeline.result || 'skipped' }}" >> pipeline-report.md
        echo "- Frontend Pipeline: ${{ needs.frontend-pipeline.result || 'skipped' }}" >> pipeline-report.md
        echo "- Security Monitoring: ${{ needs.security-monitoring.result || 'skipped' }}" >> pipeline-report.md
        echo "- Performance Monitoring: ${{ needs.performance-monitoring.result || 'skipped' }}" >> pipeline-report.md
        echo "- Health Monitoring: ${{ needs.health-monitoring.result || 'skipped' }}" >> pipeline-report.md

    - name: Upload Pipeline Report
      uses: actions/upload-artifact@v4
      with:
        name: pipeline-report-${{ needs.pipeline-start.outputs.timestamp }}
        path: pipeline-report.md

    - name: Final Pipeline Status
      uses: 8398a7/action-slack@v3
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      with:
        status: custom
        custom_payload: |
          {
            "text": "Master Pipeline ${{ contains(needs.*.result, 'failure') && 'Failed ‚ùå' || 'Completed ‚úÖ' }}",
            "attachments": [{
              "color": "${{ contains(needs.*.result, 'failure') && 'danger' || 'good' }}",
              "fields": [{
                "title": "Environment",
                "value": "${{ inputs.environment }}",
                "short": true
              }, {
                "title": "Duration",
                "value": "${{ github.event.workflow_run.conclusion && github.event.workflow_run.updated_at || 'In Progress' }}",
                "short": true
              }, {
                "title": "Backend",
                "value": "${{ needs.backend-pipeline.result == 'success' && '‚úÖ Success' || needs.backend-pipeline.result == 'failure' && '‚ùå Failed' || needs.backend-pipeline.result == 'skipped' && '‚è≠Ô∏è Skipped' || '‚è≥ Running' }}",
                "short": true
              }, {
                "title": "Frontend", 
                "value": "${{ needs.frontend-pipeline.result == 'success' && '‚úÖ Success' || needs.frontend-pipeline.result == 'failure' && '‚ùå Failed' || needs.frontend-pipeline.result == 'skipped' && '‚è≠Ô∏è Skipped' || '‚è≥ Running' }}",
                "short": true
              }, {
                "title": "Security",
                "value": "${{ needs.security-monitoring.result == 'success' && '‚úÖ Success' || needs.security-monitoring.result == 'failure' && '‚ùå Failed' || needs.security-monitoring.result == 'skipped' && '‚è≠Ô∏è Skipped' || '‚è≥ Running' }}",
                "short": true
              }, {
                "title": "Performance",
                "value": "${{ needs.performance-monitoring.result == 'success' && '‚úÖ Success' || needs.performance-monitoring.result == 'failure' && '‚ùå Failed' || needs.performance-monitoring.result == 'skipped' && '‚è≠Ô∏è Skipped' || '‚è≥ Running' }}",
                "short": true
              }, {
                "title": "Health",
                "value": "${{ needs.health-monitoring.result == 'success' && '‚úÖ Success' || needs.health-monitoring.result == 'failure' && '‚ùå Failed' || needs.health-monitoring.result == 'skipped' && '‚è≠Ô∏è Skipped' || '‚è≥ Running' }}",
                "short": true
              }, {
                "title": "Triggered By",
                "value": "${{ github.actor }}",
                "short": true
              }],
              "actions": [{
                "type": "button",
                "text": "View Full Report",
                "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
              }]
            }]
          }