name: Security Monitoring

on:
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM
  workflow_dispatch:

jobs:
  vulnerability-scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Run Trivy Scan
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy Results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'

  infrastructure-compliance:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Run Checkov
      uses: bridgecrewio/checkov-action@master
      with:
        directory: terraform/
        framework: terraform
        output_format: sarif
        output_file_path: checkov-results.sarif

    - name: Upload Checkov Results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: checkov-results.sarif

  secrets-scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Run TruffleHog
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD

  ssl-certificate-check:
    runs-on: ubuntu-latest
    steps:
    - name: Check SSL Certificates
      run: |
        domains=("gep.com" "api.gep.com" "staging.gep.com" "staging-api.gep.com")
        for domain in "${domains[@]}"; do
          expiry_date=$(echo | openssl s_client -servername $domain -connect $domain:443 2>/dev/null | openssl x509 -noout -dates | grep notAfter | cut -d= -f2)
          expiry_epoch=$(date -d "$expiry_date" +%s)
          current_epoch=$(date +%s)
          days_until_expiry=$(( (expiry_epoch - current_epoch) / 86400 ))
          
          echo "$domain certificate expires in $days_until_expiry days"
          
          if [ $days_until_expiry -lt 30 ]; then
            echo "::warning::Certificate for $domain expires in $days_until_expiry days"
          fi
        done

  notify-security-issues:
    needs: [vulnerability-scan, infrastructure-compliance, secrets-scan, ssl-certificate-check]
    if: failure()
    runs-on: ubuntu-latest
    steps:
    - name: Slack Security Alert
      uses: 8398a7/action-slack@v3
      with:
        status: failure
        channel: '#security-alerts'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        custom_payload: |
          {
            "text": "ðŸš¨ Security Issues Detected",
            "attachments": [{
              "color": "danger",
              "fields": [{
                "title": "Repository",
                "value": "${{ github.repository }}",
                "short": true
              }, {
                "title": "Scan Date",
                "value": "$(date)",
                "short": true
              }]
            }]
          }